/* @(#)Z 1.3 os2/src/storage/idl/ICIDITR.idl, oddataxfer, od96os2, odos29646d 96/11/15 15:29:39 (96/08/23 01:43:22) */
//#====START_GENERATED_PROLOG======================================
//#
//#
//#   COMPONENT_NAME: oddataxfer
//#
//#   CLASSES: none
//#
//#   ORIGINS: 82,27
//#
//#
//#   (C) COPYRIGHT International Business Machines Corp. 1995,1996
//#   All Rights Reserved
//#   Licensed Materials - Property of IBM
//#   US Government Users Restricted Rights - Use, duplication or
//#   disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
//#   	
//#   IBM DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
//#   ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//#   PURPOSE. IN NO EVENT SHALL IBM BE LIABLE FOR ANY SPECIAL, INDIRECT OR
//#   CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
//#   USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
//#   OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE
//#   OR PERFORMANCE OF THIS SOFTWARE.
//#
//#====END_GENERATED_PROLOG========================================
//#

/********************************************************************/
/*                                                                  */
/* Copyright (C) Apple Computer, Inc., 1994                         */
/*                                                                  */
/********************************************************************/

#ifndef _IODConnIDIterator_
#define _IODConnIDIterator_

#include <somobj.idl>
#include <IODDefs.idl>

#ifdef __PRIVATE__
  #ifndef _CIDNode_
    typedef somToken CIDNode;
  #endif
#endif

interface IODConnIDIterator : SOMObject
{
    #ifdef __PRIVATE__
      void Add(in ODLinkConnectionID cid);
    #endif

    ODBoolean       IsNotComplete();
    ODLinkConnectionID First();
    ODLinkConnectionID Next();

#ifdef __SOMIDL__
    implementation
    {
      override:
        somInit,
        somUninit;

      releaseorder:
        IsNotComplete,
        First,
        Next,
        #ifdef __PRIVATE__
          Add;
        #else
          reserved1;
        #endif

      #ifdef __PRIVATE__
        CIDNode* fCIDList;
        CIDNode* fCurrent;
      #endif
    };
#endif
};

#endif

